<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#
	var implementationsCount = 8;

	var toolings = new[] {"Adds","Deletes","Updates"};
#>
using Reinforced.Tecture.Services;
namespace Reinforced.Tecture.Aspects.Orm.Toolings
{
<# foreach(var k in toolings) {	#> 

    /// <summary>
    /// Service tooling that <#= k.ToLowerInvariant() #> entities
    /// </summary>
    public interface <#= k #> : Tooling { }

    /// <summary>
    /// Service tooling that <#= k.ToLowerInvariant() #> 1 entity
    /// </summary>
    public interface <#= k #><<#= GenericsStroke(1, true) #>> : <#= k #> { }

<# for (int i=1;i<implementationsCount;i++) {	#> 

    /// <summary>
    /// Service tooling that <#= k.ToLowerInvariant() #> <#= i+1 #> entities
    /// </summary>
    public interface <#= k #><<#= GenericsStroke(i+1, true) #>> : <#= k #><<#= GenericsStroke(i) #>> { }
<# } #>
<# } #>

    /// <summary>
    /// Service tooling that <#= string.Join(", ", toolings.Select(x=>x.ToLowerInvariant())) #> entities
    /// </summary>
    public interface Modifies : <#= string.Join(", ", toolings) #> { }
<# for (int i=0;i<implementationsCount;i++) {	#> 
    
    /// <summary>
    /// Service tooling that <#= string.Join(", ", toolings.Select(x=>x.ToLowerInvariant())) #> <#= i+1 #> entities
    /// </summary>
    public interface Modifies<<#= GenericsStroke(i+1, true) #>> : <#= string.Join(", ", toolings.Select(x=> $"\n\t\t{x}<{GenericsStroke(i+1)}>")) #> { }
<# } #>
}

<#+
    private string GenericsStroke(int num, bool nout = false)
    {
        StringBuilder sb = new StringBuilder();
		bool first = true;
		for(var i=0;i<num;i++){
			if (!first) sb.Append(", ");
			else first = false;
            if (nout)sb.Append("out T");
            else sb.Append("T");
			 sb.Append(i+1);
		}
		return sb.ToString();
    }
#>